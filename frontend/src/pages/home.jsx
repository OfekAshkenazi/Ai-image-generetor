import { useEffect, useState } from "react"
import { Loader, Card, FormField, CardsList } from '../components'

export default function Home() {
    const [loading, setLoading] = useState(false)
    const [allPosts, setAllPosts] = useState(null)
    const [searchText, setSearchText] = useState('')
    const [searchResults, setSearchResults] = useState(null)
    const [searchTimeout, setSearchTimeout] = useState(null)

    useEffect(() => {
        loadPosts()
    }, [])

    async function loadPosts() {
        setLoading(true)
        try {
            const res = await fetch('https://ai-image-genertor.onrender.com/api/v1/post', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
            })

            if (res.ok) {
                const result = await res.json()
                setAllPosts(result.data.reverse())

            }

        } catch (err) {
            ///showmsg
            console.log(err)
        } finally {
            setLoading(false)
        }

    }

    function handleSearchChange(ev) {
        clearTimeout(searchTimeout)

        setSearchText(ev.target.value)
        //debounce
        setSearchTimeout(

            setTimeout(() => {
                const searchRes = allPosts.filter((post) => post.name.toLowerCase().includes(searchText.toLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLowerCase()))

                setSearchResults(searchRes)

            }, 500)
        )
    }

    return (
        <section className="max-w-7xl mx-auto">
            <div className="">
                <h1 className="font-extrabold -text-[#222328] text-[32px]">The Community Showcase</h1>
                <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Browse through a collection of imaginative and Visually stunning images generated by DALL-E AI</p>
            </div>

            <div className="mt-16">
                <FormField labelName="search posts" type="text" name="text" placeholder="Search posts" value={searchText} handleChange={handleSearchChange}/>
            </div>

            <div className="mt-10">
                {loading ? (
                    <div className="flex justify-center items-center ">
                        <Loader />
                    </div>
                ) : (
                    <>
                        {searchText && (
                            <h2 className=" font-medium text-[#666e75] text-xl mb-3">
                                Showing results for <span className="text-[222328]">{searchText}</span>
                            </h2>
                        )}

                        <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                            {searchText ? (
                                <CardsList data={searchResults} title="No search results found" />
                            ) : (
                                <CardsList data={allPosts} title="No Posts found" />
                            )}


                        </div>

                    </>
                )}
            </div>

        </section>
    )
}